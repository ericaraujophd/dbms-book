Traceback (most recent call last):
  File "/Users/ea47/Documents/GitPages/dbms-book/.venv/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/Users/ea47/Documents/GitPages/dbms-book/.venv/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/ea47/Documents/GitPages/dbms-book/.venv/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/Users/ea47/Documents/GitPages/dbms-book/.venv/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/Users/ea47/Documents/GitPages/dbms-book/.venv/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/ea47/Documents/GitPages/dbms-book/.venv/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# We drop the table to avoid duplicates. This won't be the case for all databases!
cursor.execute("""
DROP TABLE IF EXISTS students;
""")

# Creating a new table named 'students'
cursor.execute("""
CREATE TABLE IF NOT EXISTS students (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    grade INTEGER
)
""")

# Committing the changes to the database
conn.commit()
------------------


[31m---------------------------------------------------------------------------[39m
[31mOperationalError[39m                          Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 2[39m
[32m      1[39m [38;5;66;03m# We drop the table to avoid duplicates. This won't be the case for all databases![39;00m
[32m----> [39m[32m2[39m [43mcursor[49m[43m.[49m[43mexecute[49m[43m([49m[33;43m"""[39;49m
[32m      3[39m [33;43mDROP TABLE IF EXISTS students;[39;49m
[32m      4[39m [33;43m"""[39;49m[43m)[49m
[32m      6[39m [38;5;66;03m# Creating a new table named 'students'[39;00m
[32m      7[39m cursor.execute([33m"""[39m
[32m      8[39m [33mCREATE TABLE IF NOT EXISTS students ([39m
[32m      9[39m [33m    id INTEGER PRIMARY KEY AUTOINCREMENT,[39m
[32m   (...)[39m[32m     12[39m [33m)[39m
[32m     13[39m [33m"""[39m)

[31mOperationalError[39m: database is locked

